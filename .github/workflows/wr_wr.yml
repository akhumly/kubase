# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy Node.js app to Azure Web App - wr

on:
  push:
    branches:
      - wr
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:17
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js version
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: npm install, build, and test
        working-directory: ./backend   # Set to the correct folder
        run: |
          npm install -g @nestjs/cli
          npm install
          npm run build
        
       # Start NestJS server in the background
      - name: Start NestJS server
        working-directory: ./backend
        run: npm run start &
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/test_db

      - name: Set up Prisma
        working-directory: ./backend   # Set to the correct folder
        run: npx prisma migrate deploy --schema=prisma/schema.prisma
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/test_db  # Add the DATABASE_URL here

      - name: Run Unit Tests
        working-directory: ./backend   # Set to the correct folder
        run: npm test
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/test_db

      # Wait for the server to be up and running before starting Cypress
      - name: Wait for server to be ready
        run: |
          npx wait-on http://localhost:3000

      - name: Run Cypress E2E Tests
        working-directory: ./backend   # Set to the correct folder
        run: npx cypress run
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/test_db

      

          